; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Tools\Dev\Workspace\VS2010\Projects\cpprimer\cpprimer\ch10ex3_golf.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0O@CLMHONDM@Jack?5Nickolas?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	??1golf@@QAE@XZ:PROC				; golf::~golf
EXTRN	?setgolf@golf@@QAEAAV1@XZ:PROC			; golf::setgolf
EXTRN	??0golf@@QAE@PBDH@Z:PROC			; golf::golf
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0O@CLMHONDM@Jack?5Nickolas?$AA@
; File d:\tools\dev\workspace\vs2010\projects\cpprimer\cpprimer\ch10ex3_golf.cpp
CONST	SEGMENT
??_C@_0O@CLMHONDM@Jack?5Nickolas?$AA@ DB 'Jack Nickolas', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	00H
	DD	FLAT:__unwindfunclet$_main$1
__ehfuncinfo$_main DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
$T67459 = -320						; size = 4
_hindenburg$ = -116					; size = 44
_lindburg$ = -64					; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT

; 7    : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 8    : 	golf lindburg, hindenburg;

	push	12					; 0000000cH
	push	OFFSET ??_C@_0O@CLMHONDM@Jack?5Nickolas?$AA@
	lea	ecx, DWORD PTR _lindburg$[ebp]
	call	??0golf@@QAE@PBDH@Z			; golf::golf
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	12					; 0000000cH
	push	OFFSET ??_C@_0O@CLMHONDM@Jack?5Nickolas?$AA@
	lea	ecx, DWORD PTR _hindenburg$[ebp]
	call	??0golf@@QAE@PBDH@Z			; golf::golf
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 9    : 
; 10   : 	hindenburg = lindburg.setgolf();

	lea	ecx, DWORD PTR _lindburg$[ebp]
	call	?setgolf@golf@@QAEAAV1@XZ		; golf::setgolf
	mov	ecx, 11					; 0000000bH
	mov	esi, eax
	lea	edi, DWORD PTR _hindenburg$[ebp]
	rep movsd

; 11   : 
; 12   : 	return S_OK;

	mov	DWORD PTR $T67459[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hindenburg$[ebp]
	call	??1golf@@QAE@XZ				; golf::~golf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lindburg$[ebp]
	call	??1golf@@QAE@XZ				; golf::~golf
	mov	eax, DWORD PTR $T67459[ebp]

; 13   : 
; 14   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@main:
	DD	2
	DD	$LN8@main
$LN8@main:
	DD	-64					; ffffffc0H
	DD	44					; 0000002cH
	DD	$LN5@main
	DD	-116					; ffffff8cH
	DD	44					; 0000002cH
	DD	$LN6@main
$LN6@main:
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	0
$LN5@main:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	lea	ecx, DWORD PTR _lindburg$[ebp]
	jmp	??1golf@@QAE@XZ				; golf::~golf
__unwindfunclet$_main$1:
	lea	ecx, DWORD PTR _hindenburg$[ebp]
	jmp	??1golf@@QAE@XZ				; golf::~golf
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
END
